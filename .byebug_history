continue
user.authenticate?(:remember,cookies.signed[:remember_token])
cookies[:remember_token]
continue
cookies[:remember_token]
cookies.signed[:remember_token]
continue
token
continue
coninue
conineu
token
digest
BCrypt::Password.new(digest).is_password?(token)
continue
token
digest
BCrypt::Password.new(digest).is_password?(token)
digest
continue
user.authenticate?(:remember,cookies.signed[:remember_token])
user = User.find_by(id: cookies.signed[:user_id])
continue
cookies[:user_id]
cookies[:remember_token]
continue
cookies[:remember_token]
cookies.signed[:remember_token]
cookies[:user_id]
exit
cookies[:user_id]
cookies[:remember_token]
exit
cookies[:remember_token]
cookies[:user_id]
cookies
exit
self.remember_digest
self
this
exit
params
@user
exit
@allowed_action[[controller.to_s,action.to_s]]
@allowed_action[[controller,action]]
@allowed_action[controller,action]
@allowed_action
action
controller
allowed
exit
@votable
exit
resource
exit
resource
exit
path
exit
value
path
exit
v = Vote.first
t
v = Vote.first
user.votes.count
user.votes
user.vote_this?(resource)
user.vote_this(resource)
user
voted
exit
polymorphic_path([resource, :votes],curent_post_id: @post.id)
polymorphic_path([resource, :votes],post_id: @post.id)
polymorphic_path([resource, :votes],value: n,resource_id: @post.id)
polymorphic_path([resource, :votes],value: n,post_id: @post.id)
polymorphic_path([resource, :votes],value: n)
polymorphic_path([resource, :votes])
polymorphic([resource, :votes])
path
exit
link_to "new", polymorphic_path([resource, :votes],id: 9)
link_to "new", polymorphic([resource, :votes],id: 9)
link_to "new", 
link_to "new", [resource, :votes, ?a]
link_to "new", [resource, :votes, a]
link_to "new", [resource, :votes]
link_to "new", [resource, :vote, resource.id.to_s]
link_to "new", [resource, :vote, resource.id]
link_to "new", [resource, :vote]
link_to "new", [:create, resource, :vote]
link_to "new", [:new, resource, :vote]
[:new, resource, :vote]
css_class
exit
current_comment.any?
current_comment
exit
request.path.split('/')
request.path
exit
params
@posts.map(&:id)
@posts
exit
@posts.map(&:id)
@posts.map(:&id)
@posts
exit
@comment.errors
@comment
exit
object.errors.count
object.errors
object
exit
controller
msg
exit
current_permission.redirect_path
current_permission
curren_permission
redirect
exit
redirect
exit
@path[0]
exit
current_permission
current_permission.redirect_path(params[:controller])
current_permission.riderect_path(params[:controller])
current_permission.redirect_path(params[:controller])
current_permission
current_psermission
current_permission.redirect_path(params[:controller])
exit
current_permission.allow_action?(params[:controller],params[:actions])
current_permission.allow_action?(params[:controller],params[:actions],nil)
current_permission(params[:controller],params[:actions],nil)
current_permission
exit
vote
exit
vote.class
vote
vte
vote.voting_user
vote.user
vote
vote.value
vote
exit
session[:user_id]
current_user
curent_user
exit
current_user
@allow_all
exit
eixt
@post
params
exit
@post
exit
params
@post.id
exit
@user
params
